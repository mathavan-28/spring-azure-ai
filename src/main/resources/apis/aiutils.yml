openapi: 3.0.1
info:
  title: Spring AI Demo
  description: This is the API to read, create, update and delete Users
  contact:
    email: mathavan.venugopal@springai.nl
  version: 1.0.0
servers:
  - url: https://localhost/
paths:
#  /spring-ai/speech-synthesize:
#    get:
#      tags:
#        - speech
#      summary: Get recorded speech with the endpoint (endpoint)
#      operationId: getRecordedSpeechByEndpoint
#      parameters:
#        - in: query
#          name: endpointUrl
#          schema:
#            type: string
#            pattern: '^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$'
#            example: https://mathavan.v.springai.nl
#      responses:
#        200:
#          description: 'Speech Information'
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/speechResponse'
#
#        400:
#          description: Bad request - Invalid Request Params
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/error'
#        403:
#          description: Unauthorized
#            group
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/error'
#        500:
#          description: Internal server error - error response from a downstream service
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/error'
#    post:
#      tags:
#        - speech
#      summary: Record user speech
#      operationId: recordSpeech
#      produces:
#        - application/json
#      consumes:
#        - multipart/form-data
#      parameters:
#        - in: formData
#          name: upfile
#          type: file
#          description: The file to upload.
##      requestBody:
##        content:
##          application/json:
##            schema:
##              $ref: '#/components/schemas/speechRequest'
##        required: true
#      responses:
#        201:
#          description: Recorded Speech
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/speechResponse'
#        400:
#          description: Bad request - Invalid Request Params
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/error'
#        403:
#          description: Unauthorized
#            group
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/error'
#        500:
#          description: Internal server error - error response from a downstream service
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/error'
#      x-codegen-request-body-name: user

  /spring-ai/process-doc:
    post:
      tags:
        - imageProcess
      summary: process user image
      operationId: processImage
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: imgData
          name: imgfile
          type: file
          description: The file to upload.
      responses:
        201:
          description: Processed Image values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiProcessedImageResponse'
        400:
          description: Bad request - Invalid Request Params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: Unauthorized group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error - error response from a downstream service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    speechRequest:
      required:
        - speechContent
        - email
        - lastModifiedBy

      type: object
      properties:
#        content:
#          audio/wav:
#            type: string
#            format: binary
        speechContent:
          contentMediaType: audio/wav
          schema:
            type: string
            format: binary
        email:
          type: string
          pattern: '^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$'
          example: mathavan.v@springai.nl
        lastModifiedBy:
          type: string
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          maxLength: 10

    speechResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/speechRequest'
        - type: object
          properties:
            speechId:
              type: integer
              format: int64
              minimum: 1
            createdDate:
              type: string
              format: date-time
              description: Date and time of the speech creation, in ISO-8601 extended
                    offset date-time format.
              example: 2019-12-31T23:59:59+01:00

    aiProcessedImageResponse:
      type: object
      properties:
        creditorName:
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          type: string
          minLength: 1
          maxLength: 35
        creditorIdentifier:
          type: string
          minLength: 1
          maxLength: 34
          pattern: '[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
          description: Valid IBAN
          example: NL91 ABNA 0417 1643 00
        creditorAddress:
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          type: string
          minLength: 1
          maxLength: 35
        creditorPostalCode:
          type: string
          minLength: 1
          maxLength: 6
          pattern: '[0-9]{4,4}[a-zA-Z]{2,2}'
        creditorCity:
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          type: string
          minLength: 1
          maxLength: 35
        creditorCountry:
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          type: string
          minLength: 1
          maxLength: 35
        mandateReference:
          type: string
          pattern: '[A-Za-z0-9/+?():,.\s-'']*'
          minLength: 1
          maxLength: 35


    error:
      type: object
      properties:
        code:
          type: string
          description: Error code represents the error. When the request is successful(i.e.
            when the status is OK), this field will be empty.
          example: E001
        message:
          type: string
          description: A human readable explanation specific to this occurrence of
            the problem. When the request is successful(i.e. when the status is OK),
            this field will be empty.
          example: Database read timed out