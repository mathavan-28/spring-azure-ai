openapi: 3.0.1
info:
  title: Spring AI Demo
  description: This is the API to read, create, update and delete Accounts
  contact:
    email: mathavan.venugopal@springai.nl
  version: 1.0.0
servers:
  - url: https://localhost/
paths:
  /spring-ai/account:
    get:
      tags:
        - account
      summary: Get account by account Number (accountNo)
      operationId: getAccountByAccountNo
      parameters:
        - in: query
          name: accountNo
          schema:
            type: integer
            minLength: 1
            maxLength: 34
            pattern: '[0-9]{1,30}'
            description: Valid Account Number
            example: 91 041 716 4300
      responses:
        200:
          description: 'Account Information'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'

        400:
          description: Bad request - Invalid Request Params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: Unauthorized
            group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error - error response from a downstream service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - account
      summary: Create a new account
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountRequest'
        required: true
      responses:
        201:
          description: Created Account Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'
        400:
          description: Bad request - Invalid Request Params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: Unauthorized
            group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error - error response from a downstream service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-codegen-request-body-name: account

  /spring-ai/account/{accountId}:
    get:
      tags:
        - account
      summary: Get account by account Id (accountId)
      operationId: getAccountById
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        200:
          description: 'Account Information'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'

        400:
          description: Bad request - Invalid Request Params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: Unauthorized
            group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Internal server error - error response from a downstream service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    accountRequest:
      required:
        - accountNo
        - branchName
        - monthlyLimit
        - usedLimit
        - currentBal
        - userId
        - lastModifiedBy

      type: object
      properties:
        accountNo:
          type: integer
          minLength: 1
          maxLength: 34
          pattern: '[0-9]{1,30}'
          description: Valid Account Number
          example: 91 041 716 4300
        branchName:
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          type: string
          minLength: 0
          maxLength: 35
        userId:
          type: integer
          format: int64
          minimum: 1
        monthlyLimit:
          type: number
          format: currency
          multipleOf: 0.01
          minimum: 0.00
          maximum: 99999999999999999
        usedLimit:
          type: number
          format: currency
          multipleOf: 0.01
          minimum: 0.00
          maximum: 99999999999999999
        currentBal:
          type: number
          format: currency
          multipleOf: 0.01
          minimum: 0.00
          maximum: 99999999999999999
        lastModifiedBy:
          type: string
          pattern: '[A-Za-z0-9/+?():,.\s-''"]*'
          maxLength: 10

    account:
      type: object
      allOf:
        - $ref: '#/components/schemas/accountRequest'
        - type: object
          properties:
            accountId:
              type: integer
              format: int64
              minimum: 1
            transactions:
              type: array
              items:
                $ref: "transactions.yml#/components/schemas/transaction"


    error:
      type: object
      properties:
        code:
          type: string
          description: Error code represents the error. When the request is successful(i.e.
            when the status is OK), this field will be empty.
          example: E001
        message:
          type: string
          description: A human readable explanation specific to this occurrence of
            the problem. When the request is successful(i.e. when the status is OK),
            this field will be empty.
          example: Database read timed out